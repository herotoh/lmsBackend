package com.example.starter_backend.service;

import com.example.starter_backend.entity.Member;
import com.example.starter_backend.repository.MemberRepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.*;

import java.time.LocalDate;
import java.util.Optional;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class MemberServiceImplTest {

    @Mock
    private MemberRepository memberRepository;

    @InjectMocks
    private MemberServiceImpl memberService;

    private Member member;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        member = new Member();
        member.setId(1L);
        member.setName("Alice");
        member.setContactInfo("alice@example.com");
        member.setRegistrationDate(LocalDate.now());
        member.setMembershipExpiryDate(LocalDate.now().plusYears(1));
    }

    @Test
    void testAddMember() {
        when(memberRepository.save(any(Member.class))).thenReturn(member);

        Member saved = memberService.addMember(member);
        assertNotNull(saved);
        assertEquals("Alice", saved.getName());
    }

    @Test
    void testGetMemberById() {
        when(memberRepository.findById(1L)).thenReturn(Optional.of(member));

        Optional<Member> result = memberService.getMemberById(1L);
        assertTrue(result.isPresent());
        assertEquals("Alice", result.get().getName());
    }
}
